{"ast":null,"code":"var _jsxFileName = \"D:\\\\Document\\\\Education\\\\Self_study\\\\practicals\\\\MERN-stack\\\\react\\\\SandaAsapuwa-web\\\\client\\\\my-app\\\\src\\\\Pages\\\\img.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Img() {\n  _s();\n  let hasAvailableRoom = true;\n  let notAvailable = \"not available\";\n  let i = 0;\n  const [roomData, setRoomData] = useState([]);\n  const [roomId, setRoomId] = useState('');\n  const [roomUrl, setRoomUrl] = useState('');\n  const [rooms, setRooms] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:5555/Rooms').then(res => {\n      setRoomData(res.data);\n    }).catch(err => console.log(err));\n  });\n  const handleRadioChange = id => {\n    setRoomId(id);\n    if (!rooms.includes(id)) {\n      setRooms(prevIds => [...prevIds, id]);\n    } else {\n      setRooms(prevIds => prevIds.filter(room => room !== id));\n    }\n  };\n  const showRoom = () => {\n    rooms.forEach(id => {\n      axios.get(`http://localhost:5555/Rooms/${id}`).then(res => {\n        setRoomUrl(res.data.url);\n        console.log(\"\");\n        console.log(res.data);\n      });\n\n      /* .catch((err)=>{console.log(err)})\r\n        const data={\r\n        roomUrl,\r\n        notAvailable\r\n        \r\n      }\r\n      \r\n      console.log(res.data.url)\r\n      axios.put(`http://localhost:5555/Rooms/${id}`,data)\r\n      .then(()=>{alert(\"room is booked!\")})\r\n      .catch(()=>{alert(\"somthing is wrong!\")})\r\n      */\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Available Rooms\", roomData.map(room => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: room.availability === \"available\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkBox\",\n                id: room._id,\n                name: \"room\",\n                onChange: () => handleRadioChange(room._id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                for: room._id,\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: room.url\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 47\n                }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: [\"Room ID:\", room._id]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 47\n                }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: [\"Availblity: \", room.availability]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 47\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 43\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Sorry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 29\n        }, this)\n      }, room._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: showRoom,\n      children: \"update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n_s(Img, \"I+9dzXDAR6rs8xro0U4VX3Q9RHs=\");\n_c = Img;\nvar _c;\n$RefreshReg$(_c, \"Img\");","map":{"version":3,"names":["axios","React","useEffect","useState","jsxDEV","_jsxDEV","Img","_s","hasAvailableRoom","notAvailable","i","roomData","setRoomData","roomId","setRoomId","roomUrl","setRoomUrl","rooms","setRooms","get","then","res","data","catch","err","console","log","handleRadioChange","id","includes","prevIds","filter","room","showRoom","forEach","url","children","map","availability","type","_id","name","onChange","fileName","_jsxFileName","lineNumber","columnNumber","for","src","onClick","_c","$RefreshReg$"],"sources":["D:/Document/Education/Self_study/practicals/MERN-stack/react/SandaAsapuwa-web/client/my-app/src/Pages/img.js"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n\r\nexport default function Img(){\r\n    let hasAvailableRoom=true\r\n    let notAvailable=\"not available\";\r\n    let i=0;\r\n    const [roomData,setRoomData]=useState([]);\r\n    const [roomId,setRoomId]=useState('');\r\n    const [roomUrl,setRoomUrl]=useState('');\r\n    \r\n    \r\n    const [rooms, setRooms] = useState([]);\r\n   \r\n    useEffect(()=>{\r\n        axios.get('http://localhost:5555/Rooms')\r\n          .then((res)=>{\r\n        \r\n           setRoomData(res.data);\r\n           \r\n           \r\n            })\r\n          .catch((err)=>console.log(err))\r\n          \r\n      }) \r\n\r\n      \r\n          const handleRadioChange = (id) => {\r\n        \r\n            setRoomId(id);\r\n           \r\n            \r\n          \r\n              if (!rooms.includes(id)) {\r\n                setRooms(prevIds => [...prevIds, id]);\r\n               } else {\r\n                 setRooms(prevIds => prevIds.filter(room => room !== id));\r\n               }\r\n        \r\n            \r\n        };\r\n        \r\n        const showRoom=()=>{\r\n         \r\n         \r\n         \r\n                        \r\n          rooms.forEach((id)=>{\r\n             axios.get(`http://localhost:5555/Rooms/${id}`)\r\n                  .then((res)=>{\r\n                          setRoomUrl(res.data.url)\r\n                          console.log(\"\")\r\n                          console.log(res.data)\r\n                        \r\n                        })\r\n                   \r\n                        /* .catch((err)=>{console.log(err)})\r\n\r\n                        const data={\r\n                          roomUrl,\r\n                          notAvailable\r\n                          \r\n                        }\r\n                        \r\n                        console.log(res.data.url)\r\n                        axios.put(`http://localhost:5555/Rooms/${id}`,data)\r\n                        .then(()=>{alert(\"room is booked!\")})\r\n                        .catch(()=>{alert(\"somthing is wrong!\")})\r\n\r\n */\r\n\r\n\r\n                        \r\n                      }\r\n              \r\n          )\r\n            \r\n           \r\n         \r\n        \r\n    }\r\n\r\n      return(\r\n        <div>\r\n           Available Rooms\r\n            {roomData.map((room)=>{\r\n              \r\n                \r\n              \r\n                return(\r\n                    <div key={room._id}>\r\n                      \r\n                       {(room.availability===\"available\") ? \r\n                            <div>\r\n                         \r\n                              <form>\r\n                              {/*   {inputType ?\r\n                                      <div>\r\n                                        <input \r\n                                              type='radio' \r\n                                              id={room._id}\r\n                                              name='room'\r\n                                              checked={ selectedRoom === room._id}\r\n                                              onChange={() => handleRadioChange(room._id)} \r\n                                          />\r\n                                          <label for={room._id}>\r\n                                              <img src={room.url}/>\r\n                                          </label>\r\n                                      </div>\r\n                                      :\r\n\r\n                                     \r\n                                  } */}\r\n                                   <div>\r\n                                        <input \r\n                                              type='checkBox' \r\n                                              id={room._id}\r\n                                              name='room'\r\n                                            \r\n                                              onChange={() => handleRadioChange(room._id)} \r\n                                          />\r\n                                          <label for={room._id}>\r\n                                              <img src={room.url}/>\r\n                                              <h2>Room ID:{room._id}</h2>\r\n                                              <h2>Availblity: {room.availability}</h2>\r\n                                          </label>\r\n                                      </div>\r\n                              </form>\r\n                     \r\n                            </div> \r\n                            : \r\n                            <span>Sorry</span>  \r\n                        \r\n                        \r\n                        \r\n                        \r\n                      }\r\n                      \r\n                    \r\n\r\n                    </div>\r\n                )\r\n            })}\r\n          <button onClick={showRoom}>update</button>\r\n        </div>\r\n      )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}