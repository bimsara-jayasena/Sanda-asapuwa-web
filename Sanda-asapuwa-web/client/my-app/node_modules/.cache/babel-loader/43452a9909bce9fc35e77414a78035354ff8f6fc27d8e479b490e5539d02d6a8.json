{"ast":null,"code":"var _jsxFileName = \"D:\\\\Document\\\\Education\\\\Self_study\\\\practicals\\\\MERN-stack\\\\react\\\\SandaAsapuwa-web\\\\client\\\\my-app\\\\src\\\\Pages\\\\img.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Img() {\n  _s();\n  let hasAvailableRoom = true;\n  const [roomData, setRoomData] = useState([]);\n  const [roomId, setRoomId] = useState('');\n  const [selectedRoom, setSelectedRoom] = useState('');\n  const [rooms, setRooms] = useState([]);\n  const [inputType, setInputType] = useState(fla);\n  useEffect(() => {\n    axios.get('http://localhost:5555/Rooms').then(res => {\n      setRoomData(res.data);\n    }).catch(err => console.log(err));\n  });\n  const changeAvailable = event => {\n    /* const id=event.target.id;\r\n    setRoomId(id);\r\n    axios.put(`http://localhost:5555/Rooms/:${roomId}`,async(req,res)=>{\r\n      try{\r\n        }\r\n      catch(err){\r\n         return res.send({message:err.message})\r\n      } */\n    axios.get('http://localhost:5555/Rooms').then(res => {\n      console.log(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  const handleRadioChange = roomId => {\n    setSelectedRoom(roomId);\n    setRooms([roomId]);\n    if (inputType) {\n      if (!rooms.includes(roomId)) {\n        setRooms([roomId]);\n      } else {\n        setRooms(prevIds => prevIds.filter(room => room !== roomId));\n      }\n    } else {\n      if (!rooms.includes(roomId)) {\n        setRooms(prevIds => [...prevIds, roomId]);\n      } else {\n        setRooms(prevIds => prevIds.filter(room => room !== roomId));\n      }\n    }\n    console.log(rooms);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Available Rooms\", roomData.map(room => {\n      let hasAvailableRoom = room.availability;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: hasAvailableRoom ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            children: inputType ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                id: room._id,\n                name: \"room\",\n                checked: selectedRoom === room._id,\n                onChange: () => handleRadioChange(room._id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                for: room._id,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: room.url\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 47\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 43\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 39\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkBox\",\n                id: room._id,\n                name: \"room\",\n                onChange: () => handleRadioChange(room._id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                for: room._id,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: room.url\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 47\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 43\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Sorry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 29\n        }, this)\n      }, room._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(Img, \"uJAL14npEaUGUyacIvMMl2ZxPa0=\");\n_c = Img;\nvar _c;\n$RefreshReg$(_c, \"Img\");","map":{"version":3,"names":["axios","React","useEffect","useState","jsxDEV","_jsxDEV","Img","_s","hasAvailableRoom","roomData","setRoomData","roomId","setRoomId","selectedRoom","setSelectedRoom","rooms","setRooms","inputType","setInputType","fla","get","then","res","data","catch","err","console","log","changeAvailable","event","handleRadioChange","includes","prevIds","filter","room","children","map","availability","type","id","_id","name","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","for","src","url","_c","$RefreshReg$"],"sources":["D:/Document/Education/Self_study/practicals/MERN-stack/react/SandaAsapuwa-web/client/my-app/src/Pages/img.js"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n\r\nexport default function Img(){\r\n    let hasAvailableRoom=true\r\n\r\n    const [roomData,setRoomData]=useState([]);\r\n    const [roomId,setRoomId]=useState('');\r\n    const [selectedRoom, setSelectedRoom] = useState('');\r\n    const [rooms, setRooms] = useState([]);\r\n    const [inputType,setInputType]=useState(fla);\r\n    useEffect(()=>{\r\n        axios.get('http://localhost:5555/Rooms')\r\n          .then((res)=>{\r\n        \r\n           setRoomData(res.data);\r\n           \r\n            })\r\n          .catch((err)=>console.log(err))\r\n      }) \r\n\r\n      const changeAvailable=(event)=>{\r\n          /* const id=event.target.id;\r\n          setRoomId(id);\r\n          axios.put(`http://localhost:5555/Rooms/:${roomId}`,async(req,res)=>{\r\n            try{\r\n              }\r\n            catch(err){\r\n               return res.send({message:err.message})\r\n            } */\r\n            axios.get('http://localhost:5555/Rooms')\r\n              .then((res)=>{console.log(res.data)})\r\n              .catch((err)=>{console.log(err)}) \r\n          } \r\n          \r\n          const handleRadioChange = (roomId) => {\r\n            setSelectedRoom(roomId);\r\n            setRooms([roomId])\r\n            if(inputType){\r\n              if (!rooms.includes(roomId)) {\r\n                setRooms([roomId]);\r\n               } else {\r\n                 setRooms(prevIds => prevIds.filter(room => room !== roomId));\r\n               }\r\n            }\r\n            else{\r\n              if (!rooms.includes(roomId)) {\r\n                setRooms(prevIds => [...prevIds, roomId]);\r\n               } else {\r\n                 setRooms(prevIds => prevIds.filter(room => room !== roomId));\r\n               }\r\n            }\r\n           console.log(rooms);\r\n        };\r\n\r\n\r\n\r\n      return(\r\n        <div>\r\n           Available Rooms\r\n            {roomData.map((room)=>{\r\n                let hasAvailableRoom = room.availability;\r\n                return(\r\n                    <div key={room._id}>\r\n                      \r\n                       {hasAvailableRoom ? \r\n                            <div>\r\n                         \r\n                              <form>\r\n                                {inputType ?\r\n                                      <div>\r\n                                        <input \r\n                                              type='radio' \r\n                                              id={room._id}\r\n                                              name='room'\r\n                                              checked={ selectedRoom === room._id}\r\n                                              onChange={() => handleRadioChange(room._id)} \r\n                                          />\r\n                                          <label for={room._id}>\r\n                                              <img src={room.url}/>\r\n                                          </label>\r\n                                      </div>\r\n                                      :\r\n\r\n                                      <div>\r\n                                        <input \r\n                                              type='checkBox' \r\n                                              id={room._id}\r\n                                              name='room'\r\n                                            \r\n                                              onChange={() => handleRadioChange(room._id)} \r\n                                          />\r\n                                          <label for={room._id}>\r\n                                              <img src={room.url}/>\r\n                                          </label>\r\n                                      </div>\r\n                                  }\r\n                              </form>\r\n                     \r\n                            </div> \r\n                            : \r\n                            <span>Sorry</span>  \r\n                        \r\n                        \r\n                        \r\n                        \r\n                      }\r\n                      \r\n\r\n\r\n                    </div>\r\n                )\r\n            })}\r\n      \r\n        </div>\r\n      )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}