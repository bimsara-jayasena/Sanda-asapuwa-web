{"ast":null,"code":"var _jsxFileName = \"D:\\\\Document\\\\Education\\\\Self_study\\\\practicals\\\\MERN-stack\\\\react\\\\SandaAsapuwa-web\\\\client\\\\my-app\\\\src\\\\Pages\\\\img.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Img() {\n  _s();\n  let hasAvailableRoom = true;\n  const [roomData, setRoomData] = useState([]);\n  const [roomId, setRoomId] = useState('');\n  const [selectedRoom, setSelectedRoom] = useState('');\n  const [rooms, setRooms] = useState([]);\n  /*  const [inputType,setInputType]=useState(false); */\n  useEffect(() => {\n    axios.get('http://localhost:5555/Rooms').then(res => {\n      setRoomData(res.data);\n    }).catch(err => console.log(err));\n  });\n  const changeAvailable = event => {\n    /* const id=event.target.id;\r\n    setRoomId(id);\r\n    axios.put(`http://localhost:5555/Rooms/:${roomId}`,async(req,res)=>{\r\n      try{\r\n        }\r\n      catch(err){\r\n         return res.send({message:err.message})\r\n      } */\n    axios.get('http://localhost:5555/Rooms').then(res => {\n      console.log(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  const handleRadioChange = id => {\n    setSelectedRoom(id);\n\n    /*  if(inputType){\r\n       if (!rooms.includes(roomId)) {\r\n         setRooms([roomId]);\r\n        } else {\r\n          setRooms(prevIds => prevIds.filter(room => room !== roomId));\r\n        }\r\n     }\r\n     else{ */\n    if (!rooms.includes(id)) {\n      setRooms(prevIds => [...prevIds, id]);\n    } else {\n      setRooms(prevIds => prevIds.filter(room => room !== id));\n    }\n    /*  } */\n  };\n\n  /*   const showRoom=()=>{\r\n      axios.put(`http://localhost:5555/Rooms/${roomId}`,async(req,res)=>{\r\n        try{  \r\n            const room=await \r\n          return res.send({message:'success!'});\r\n          console.log('success!')\r\n              \r\n        }\r\n        catch(err){\r\n          return res.send({message:err.message});\r\n          console.log('success!')\r\n        }\r\n      })\r\n    }\r\n  */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Available Rooms\", roomData.map(room => {\n      let hasAvailableRoom = room.availability;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: hasAvailableRoom ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkBox\",\n                id: room._id,\n                name: \"room\",\n                onChange: () => handleRadioChange(room._id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                for: room._id,\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: room.url\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 47\n                }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: [\"Room ID:\", room._id]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 47\n                }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: [\"Availblity: \", room.availability ? 'true' : 'false']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 47\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 43\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Sorry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 29\n        }, this)\n      }, room._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sh,\n      children: \"update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n_s(Img, \"Rc2r3VzM1MbI+13vx+WRFZTacQA=\");\n_c = Img;\nvar _c;\n$RefreshReg$(_c, \"Img\");","map":{"version":3,"names":["axios","React","useEffect","useState","jsxDEV","_jsxDEV","Img","_s","hasAvailableRoom","roomData","setRoomData","roomId","setRoomId","selectedRoom","setSelectedRoom","rooms","setRooms","get","then","res","data","catch","err","console","log","changeAvailable","event","handleRadioChange","id","includes","prevIds","filter","room","children","map","availability","type","_id","name","onChange","fileName","_jsxFileName","lineNumber","columnNumber","for","src","url","onClick","sh","_c","$RefreshReg$"],"sources":["D:/Document/Education/Self_study/practicals/MERN-stack/react/SandaAsapuwa-web/client/my-app/src/Pages/img.js"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n\r\nexport default function Img(){\r\n    let hasAvailableRoom=true\r\n\r\n    const [roomData,setRoomData]=useState([]);\r\n    const [roomId,setRoomId]=useState('');\r\n    const [selectedRoom, setSelectedRoom] = useState('');\r\n    const [rooms, setRooms] = useState([]);\r\n   /*  const [inputType,setInputType]=useState(false); */\r\n    useEffect(()=>{\r\n        axios.get('http://localhost:5555/Rooms')\r\n          .then((res)=>{\r\n        \r\n           setRoomData(res.data);\r\n           \r\n            })\r\n          .catch((err)=>console.log(err))\r\n      }) \r\n\r\n      const changeAvailable=(event)=>{\r\n          /* const id=event.target.id;\r\n          setRoomId(id);\r\n          axios.put(`http://localhost:5555/Rooms/:${roomId}`,async(req,res)=>{\r\n            try{\r\n              }\r\n            catch(err){\r\n               return res.send({message:err.message})\r\n            } */\r\n            axios.get('http://localhost:5555/Rooms')\r\n              .then((res)=>{console.log(res.data)})\r\n              .catch((err)=>{console.log(err)}) \r\n          } \r\n          \r\n          const handleRadioChange = (id) => {\r\n        \r\n            setSelectedRoom(id);\r\n            \r\n           /*  if(inputType){\r\n              if (!rooms.includes(roomId)) {\r\n                setRooms([roomId]);\r\n               } else {\r\n                 setRooms(prevIds => prevIds.filter(room => room !== roomId));\r\n               }\r\n            }\r\n            else{ */\r\n              if (!rooms.includes(id)) {\r\n                setRooms(prevIds => [...prevIds, id]);\r\n               } else {\r\n                 setRooms(prevIds => prevIds.filter(room => room !== id));\r\n               }\r\n           /*  } */\r\n            \r\n        };\r\n        \r\n      /*   const showRoom=()=>{\r\n          axios.put(`http://localhost:5555/Rooms/${roomId}`,async(req,res)=>{\r\n            try{  \r\n\r\n              const room=await \r\n              return res.send({message:'success!'});\r\n              console.log('success!')\r\n                  \r\n            }\r\n            catch(err){\r\n              return res.send({message:err.message});\r\n              console.log('success!')\r\n            }\r\n          })\r\n        }\r\n */\r\n\r\n      return(\r\n        <div>\r\n           Available Rooms\r\n            {roomData.map((room)=>{\r\n                let hasAvailableRoom = room.availability;\r\n                return(\r\n                    <div key={room._id}>\r\n                      \r\n                       {hasAvailableRoom ? \r\n                            <div>\r\n                         \r\n                              <form>\r\n                              {/*   {inputType ?\r\n                                      <div>\r\n                                        <input \r\n                                              type='radio' \r\n                                              id={room._id}\r\n                                              name='room'\r\n                                              checked={ selectedRoom === room._id}\r\n                                              onChange={() => handleRadioChange(room._id)} \r\n                                          />\r\n                                          <label for={room._id}>\r\n                                              <img src={room.url}/>\r\n                                          </label>\r\n                                      </div>\r\n                                      :\r\n\r\n                                     \r\n                                  } */}\r\n                                   <div>\r\n                                        <input \r\n                                              type='checkBox' \r\n                                              id={room._id}\r\n                                              name='room'\r\n                                            \r\n                                              onChange={() => handleRadioChange(room._id)} \r\n                                          />\r\n                                          <label for={room._id}>\r\n                                              <img src={room.url}/>\r\n                                              <h2>Room ID:{room._id}</h2>\r\n                                              <h2>Availblity: {(room.availability) ? 'true' : 'false'}</h2>\r\n                                          </label>\r\n                                      </div>\r\n                              </form>\r\n                     \r\n                            </div> \r\n                            : \r\n                            <span>Sorry</span>  \r\n                        \r\n                        \r\n                        \r\n                        \r\n                      }\r\n                      \r\n                    \r\n\r\n                    </div>\r\n                )\r\n            })}\r\n          <button onClick={sh}>update</button>\r\n        </div>\r\n      )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}